name: cfn-policy-validator-workflow
on:
  pull_request:
    types: [opened, review_requested]

  push:
    branches:
      - 'main'

permissions:
  id-token: write
  contents: read
  issues: write

jobs: 
  cfn-iam-policy-validation: 
    name: iam-policy-validation
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        id: checkOut
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: configureCreds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE }}
          aws-region: us-east-1
          role-session-name: GitHubSessionName
        
      - name: Fetch reference policy from s3
        id: getReferencePolicy
        run: |
          aws s3 cp ${{ secrets.REFERENCE_IDENTITY_POLICY_CLOUDFORMATION }} ./cloudformation-policy-reference.json
          aws s3 cp ${{ secrets.REFERENCE_IDENTITY_POLICY_PRINCIPAL }} ./allowlist-account-principal.json
        shell: bash
          
      - name: CloudFormation-Access-Checks
        id: run-aws-check-no-new-access
        uses: aws-actions/cloudformation-aws-iam-policy-validator@v1.0.1
        with:
          policy-check-type: 'CHECK_NO_NEW_ACCESS'
          template-path: './cfn-iam-role-cloudformation-sample.yaml'
          reference-policy: './cloudformation-policy-reference.json'
          reference-policy-type: "IDENTITY"
          region: us-east-1
      - name: New-Principal-Checks
        id: run-aws-check-no-new-access-assumerole
        uses: aws-actions/cloudformation-aws-iam-policy-validator@v1.0.1
        with:
          policy-check-type: 'CHECK_NO_NEW_ACCESS'
          template-path: './cfn-iam-role-principal-sample.yaml'
          reference-policy: './allowlist-account-principal.json'
          reference-policy-type: "RESOURCE"
          region: us-east-1
      # - name: Privilaged-Access-Checks
      #   id: run-aws-check-no-new-access-privilaged-checks
      #   uses: aws-actions/cloudformation-aws-iam-policy-validator@v1.0.1
      #   with:
      #     policy-check-type: 'CHECK_NO_NEW_ACCESS'
      #     template-path: './cfn-iam-pass-role-sample.yaml'
      #     reference-policy: './privilege-action.json'
      #     reference-policy-type: "IDENTITY"
      #     region: us-east-1
      # - name: Deploy CloudFormation Stack
      #   id: deployStack
      #   if: success()  # Only run if previous steps succeeded
      #   run: |
      #     aws cloudformation deploy \
      #       --template-file iam-role-lambda.yaml \
      #       --stack-name lambda-access-check-demo \
      #       --capabilities CAPABILITY_NAMED_IAM
      #   shell: bash
    